@using fletnix.ViewModels
@{
    ViewData["Title"] = "Home Page";
    Layout = "_Layout";
}

<div class="container-fluid" style="margin-top: 50px;">
    <h2 style="color: #8E8E8E;  font-size: 18px; font-family: arial;">Your Watch history</h2>
    <div class="row">
        @foreach (var history in (List<PopularMoviesViewModel>) Model)
        {
            <div class="col-md-2" style="padding: 5px;">
                <div style="overflow: hidden; height: 200px; margin-bottom: 0px;">
                    <div class="movie watchhistory-movie" style="position: relative; min-height: 170px; color: white; text-align: center;" data-id="@history.Movie.MovieId" data-title="@history.Movie.Title">
                       
                        <a asp-route-id="@history.Movie.MovieId" asp-action="movie" asp-controller="dashboard">
                            <div style="background-color: #141414; padding: 5px; padding-top: 11px; position: absolute; z-index: 99; height: 48px; width: 102%; font-size: 16px; top: 150px; color: #8E8E8E;">
                                @history.Movie.Title 
                            </div>
                        </a>
                       
                        <img class="movie-poster-@history.Movie.MovieId" src="~/images/no-backdrop.jpg" style="width: 100%;"/>
                        @if (history.Review != null)
                        {
                            <div style="cursor: pointer; position: absolute; top: 110px; padding: 10px; background-color: green; color: white;">Reviewed</div>
                            <div data-method="patch" data-year="@history.Movie.PublicationYear" data-id="@history.Movie.MovieId" data-title="@history.Movie.Title" data-review="@history.Review.Review" data-rating="@history.Review.Rating" class="feedback-box" style="position: absolute; top: 110px; padding: 10px; left: 80px; background-color: #b8860b; color: white;">Edit</div>
                            <div data-method="delete" data-year="@history.Movie.PublicationYear" class="feedback-box" id="deleteFeedback" data-rating="@history.Review.Rating" data-title="@history.Movie.Title" data-id="@history.Movie.MovieId" style="position: absolute; top: 110px; padding: 10px; left: 124px; background-color: red; color: white;">Delete</div>
                        }
                        else
                        {
                            <div data-method="post" data-title="@history.Movie.Title" data-id="@history.Movie.MovieId" data-year="@history.Movie.PublicationYear" style="position: absolute; top: 107px; left: 3px; z-index: 999; padding: 10px; color: white;" class="feedback-box">Leave a review <i class="fa fa-commenting" aria-hidden="true"></i>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>


<div class="modal fade" id="feedbackmodal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg"  role="document">
        <div class="modal-content" style="background-color: #141414;">
            <div class="modal-header" style="border-bottom: 1px solid #8E8E8E;">
                <button type="button" class="close" style="color: white;"  data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="mtitlefeedback" style="color: white;" id="myModalLabel">We appreciate you giving us feedback!</h4>
            </div>
            <div class="modal-body">
                <div class="crudNotification" id="feedbacknotification" style="background-color: green; display: none;"></div>
                <div class="row">
                    <div class="col-md-3 text-center">

                        <img id="feedbackposterimage" style="margin-top: 10px; width: 100%;"></img>

                    </div>
                    <div class="col-md-9">
                        <label style="color: white;">What did you think of it?</label><br>
                        <textarea id="feedbacktext" style="color: white; width: 100%; min-height: 230px; background-color: #141414;"></textarea><br><br>
                        <label style="color: white;">Rate it!</label>
                        <select id="movie-rating" name="rating" autocomplete="off" style="display: none;">
                            <option value="1">Shit</option>
                            <option value="2">Very bad</option>
                            <option value="3">Bad</option>
                            <option value="4">Meh</option>
                            <option value="5">Mediocre</option>
                            <option value="6">Alright</option>
                            <option value="7" selected>Good</option>
                            <option value="8">Better than good</option>
                            <option value="9">Awesome</option>
                            <option value="10">Fucking awesome</option>
                        </select><br><br>
                    </div>
                </div>

            </div>
            <div class="modal-footer" style="border-top: 0px solid #8E8E8E;">
                <button type="button" class="btn fletnix-btn" style="padding: 10px; font-size: 16px; background-color: white;  color: black;" data-dismiss="modal">Close</button>
                <button type="button" id="feedbackBtn" class="btn fletnix-btn fletnix-red-background" style="padding: 10px; font-size: 16px; color: white;">Leave feedback</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="~/js/jquery-bar-rating.js" type="text/javascript"></script>
    <script>
        $(document).ready(function() {

            $(".movie").each(function(index) {
                getPoster($(this).data('id'), $('.movie-poster-' + $(this).data('id')), $(this).data('title'));
            });

            var currentlyLeavingFeedbackFor = 0;
            var apiMethod = "post";
            $('.feedback-box').click(function() {
                getPoster(null, $('#feedbackposterimage'), $(this).data('title'), true);
                $('#mtitlefeedback').text($(this).data('title') + ' (' + $(this).data('year') + ')');
                currentlyLeavingFeedbackFor = $(this).data('id');

                var method = $(this).data('method');
                var toggle = true;
                if (method == 'patch') {
                    $('#movie-rating').barrating('set', $(this).data('rating'));
                    $('#feedbacktext').val($(this).data('review'));
                    apiMethod = "patch";
                    $('#feedbackBtn').text('Update review');
                } else if (method == 'post') {
                    apiMethod = "post";
                    $('#movie-rating').barrating('set', 6);
                    $('#feedbacktext').val('');
                    $('#feedbackBtn').text('Leave review');
                } else if (method == 'delete') {
                    if (confirm("Are you sure you want to delete your review for: " + $(this).data('title') + " (" + $(this).data('year') + ")")) {
                        toggle = false;
                        apiMethod = 'delete';
                        doReq(false);
                    }
                }

                if (toggle) $('#feedbackmodal').modal('toggle');

            });

            $(function() {
                $('#movie-rating').barrating({
                    theme: 'bars-movie'
                });
            });


            $('#feedbackBtn').click(function() {
                doReq();
            });

            function doReq(toggle) {
                if (toggle == undefined) toggle = true;
                var feedback = $('#feedbacktext').val();
                var rating = $("#movie-rating").val();
                console.log('leaving feedback');
                $.ajax
                ({
                    type: apiMethod,
                    url: "/api/movies/" + currentlyLeavingFeedbackFor + "/feedback",
                    beforeSend: (xhr) => {
                        xhr.setRequestHeader('Content-Type', 'application/json') 
                        xhr.setRequestHeader('RequestVerificationToken', $("#AntiForgery input").val());
                    },
                    dataType: 'json',
                    async: true,
                    data: JSON.stringify({
                        movieId: currentlyLeavingFeedbackFor,
                        review: feedback,
                        rating: rating
                    }),
                    success: function(res) {
                        
                        var noti = $('#feedbacknotification');
                        switch (apiMethod) {
                        case 'post':
                            noti.text('Thanks for leaving your review');
                            break;
                        case 'patch':
                            noti.text('Your review has been updated');
                            break;
                        case 'delete':
                            alert('Your review has been removed');
                            location.reload();
                            break;
                        }
                        noti.slideDown('fast',
                            function() {
                                setTimeout(function() {
                                        if (apiMethod != 'patch') {
                                            location.reload();
                                        } else {
                                            noti.slideUp('fast');
                                            if (toggle) $('#feedbackmodal').modal('toggle');
                                            setTimeout(function() {
                                                    location.reload();
                                                },
                                                500);
                                        }
                                    },
                                    2000);
                            });
                    }
                });
            }
        });

        function getPoster(id, element, title, poster) {
            if (poster == undefined) poster = false;
            $.get('https://api.themoviedb.org/3/search/movie?api_key=8f3879e8c91096e1e468cf6c539dc1e7&query=' +
                encodeURI(title),
                (res) => {
                    if (res.results[0]) {
                        if (res.results[0].backdrop_path) {
                            //poster_path
                            if (poster == false) {
                                element.attr('src', 'https://image.tmdb.org/t/p/w500/' + res.results[0].backdrop_path);
                            } else {
                                element.attr('src', 'https://image.tmdb.org/t/p/w500/' + res.results[0].poster_path);
                            }
                        }
                    } else {
                        element.attr('src', '/images/no-backdrop.jpg');
                    }
                });
        }
    </script>
}